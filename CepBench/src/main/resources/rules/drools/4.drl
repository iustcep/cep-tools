package ac.iust.cep;

import ac.iust.cep.monitor.server.Throughput;
import ac.iust.cep.monitor.server.Latency;
import ac.iust.cep.data.gen.Generated.EventProtocolBuffer;
import ac.iust.cep.business.client.EventProducer
import ir.iust.cep.monitor.server.Throughput
import ir.iust.cep.monitor.server.Latency;

declare EventProtocolBuffer
    @role(event)
    @expires(30s)
end

rule "4"

	no-loop
    when
          $event1 : EventProtocolBuffer($event1_count_value : Integer.parseInt(getFiledValueByTag("count")) > 10 &&
                    $event1_price_value : Integer.parseInt(getFiledValueByTag("price")) > 50 &&
                    $event1_weight_value : Integer.parseInt(getFiledValueByTag("price")) > 10 &&
                    $event1_discount_value : Integer.parseInt(getFiledValueByTag("discount")) > 50) over window:time( 30s ) from entry-point ONE

          and $event2 : EventProtocolBuffer($event2_count_value : Integer.parseInt(getFiledValueByTag("count")) < 90 &&
                    $event2_price_value : Integer.parseInt(getFiledValueByTag("price")) < 50 &&
                    $event2_weight_value : Integer.parseInt(getFiledValueByTag("price")) < 90 &&
                    $event2_discount_value : Integer.parseInt(getFiledValueByTag("discount")) > 60) over window:time( 30s ) from entry-point ONE
    then
//        System.out.println($event3.getFiledValueByTag("time_stamp"));
        long now = System.currentTimeMillis();
//        System.out.println("4: " + (now - Long.parseLong($event2.getFiledValueByTag("time_stamp"))) + "");
        Throughput.doCalculate(4);
        Latency.doCalculate(4, now - Long.parseLong($event2.getFiledValueByTag("time_stamp")));
end